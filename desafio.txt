PS D:\Shopper\backend-server-master - Copy> mongosh
Current Mongosh Log ID: 6397f16b023cc6d8ea78914a
Connecting to:          mongodb://127.0.0.1:27017/?directConnection=true&serverSelectionTimeoutMS=2000&appName=mongosh+1.6.1
Using MongoDB:          6.0.3
Using Mongosh:          1.6.1

For mongosh info see: https://docs.mongodb.com/mongodb-shell/

------
   The server generated these startup warnings when booting
   2022-12-12T22:18:05.636-05:00: Access control is not enabled for the database. Read and write access to data and configuration is unrestricted
   2022-12-12T22:18:05.639-05:00: This server is bound to localhost. Remote systems will be unable to connect to this server. Start the server with --bind_ip <address> to specify which IP addresses it should serve responses from, or with --bind_ip_all to bind to all interfaces. If this behavior is desired, start the server with --bind_ip 127.0.0.1 to disable this warning
------

------
   Enable MongoDB's free cloud-based monitoring service, which will then receive and display
   metrics about your deployment (disk utilization, CPU, operation statistics, etc).

   The monitoring data will be available on a MongoDB website with a unique URL 
accessible to you
   and anyone you share the URL with. MongoDB may use this information to make product
   improvements and to suggest MongoDB products and deployment options to you.  

   To enable free monitoring, run the following command: db.enableFreeMonitoring()
   To permanently disable this reminder, run the following command: db.disableFreeMonitoring()
------

test> use coderhouse
switched to db coderhouse
coderhouse> db.createCollection('productos')
{ ok: 1 }
coderhouse> show dbs
admin       40.00 KiB
coderhouse   8.00 KiB
config      72.00 KiB
local       72.00 KiB
coderhouse> show collections
productos
coderhouse> db.productos
coderhouse.productos
coderhouse> use admin
switched to db admin
admin> db.createUser(
...   {
...     user: "<nombre_del_usuario>",
...     pwd: "<contraseÃ±a>",
...     roles:
...        { role: "< read | readWrite", db: "<base_de_datos>" }
...     ]
Uncaught:
SyntaxError: Unexpected token, expected "," (7:4)

  5 |     roles:
  6 |        { role: "< read | readWrite", db: "<base_de_datos>" }
> 7 |     ]
    |     ^
  8 |

admin>   }
Uncaught:
SyntaxError: Unexpected token (1:2)

> 1 |   }
    |   ^
  2 |

admin> db.createUser({user:"root", pwd:"mongopassword", roles:["root"]})        
{ ok: 1 }
admin> db.createUser({user: "pepe", pwd:"asd456", roles: [{ role: "read", db: "coderhouse"}]})
{ ok: 1 }
admin> use coderhouse
switched to db coderhouse
coderhouse> db.chat.insertOne({mail:"diego@gmail.com", mensaje:"hola"})
{
  acknowledged: true,
  insertedId: ObjectId("6397ff202cbd434779a4ed18")
}
coderhouse> db.chat.find
[Function: find] AsyncFunction {
  returnsPromise: true,
  apiVersions: [ 1, Infinity ],
  returnType: 'Cursor',
  serverVersions: [ '0.0.0', '999.999.999' ],
  topologies: [ 'ReplSet', 'Sharded', 'LoadBalanced', 'Standalone' ],
  deprecated: false,
  platforms: [ 'Compass', 'Browser', 'CLI' ],
  isDirectShellCommand: false,
  acceptsRawInput: false,
  shellCommandCompleter: undefined,
  help: [Function (anonymous)] Help
}
coderhouse> db.coderhouse.find()

coderhouse> db.chat.find()
[
  {
    _id: ObjectId("6397ff202cbd434779a4ed18"),
    mail: 'diego@gmail.com',
    mensaje: 'hola'
  }
]
coderhouse> db.chat.insertOne({mail:"agustin@gmail.com", mensaje:"bien"})       
{
  acknowledged: true,
  insertedId: ObjectId("6398005a2cbd434779a4ed19")
}
coderhouse> db.chat.find
[Function: find] AsyncFunction {
  returnsPromise: true,
  apiVersions: [ 1, Infinity ],
  returnType: 'Cursor',
  serverVersions: [ '0.0.0', '999.999.999' ],
  topologies: [ 'ReplSet', 'Sharded', 'LoadBalanced', 'Standalone' ],
  deprecated: false,
  platforms: [ 'Compass', 'Browser', 'CLI' ],
  isDirectShellCommand: false,
  acceptsRawInput: false,
  shellCommandCompleter: undefined,
  help: [Function (anonymous)] Help
}
coderhouse> db.chat.find()
[
  {
    _id: ObjectId("6397ff202cbd434779a4ed18"),
    mail: 'diego@gmail.com',
    mensaje: 'hola'
  },
  {
    _id: ObjectId("6398005a2cbd434779a4ed19"),
    mail: 'agustin@gmail.com',
    mensaje: 'bien'
  }
]
coderhouse> db.chat.insertOne({product:"peliculaUno", precio: 120, thumbnail:"uno.url"})
{
  acknowledged: true,
  insertedId: ObjectId("6398051c2cbd434779a4ed1a")
}
coderhouse> db.chat.find()
[
  {
    _id: ObjectId("6397ff202cbd434779a4ed18"),
    mail: 'diego@gmail.com',
    mensaje: 'hola'
  },
  {
    _id: ObjectId("6398005a2cbd434779a4ed19"),
    mail: 'agustin@gmail.com',
    mensaje: 'bien'
  },
  {
    _id: ObjectId("6398051c2cbd434779a4ed1a"),
    product: 'peliculaUno',
    precio: 120,
    thumbnail: 'uno.url'
  }
]
coderhouse> db.chat.deleteOne({product:'peliculaUno'})
{ acknowledged: true, deletedCount: 1 }
coderhouse> db.chat.find()
[
  {
    _id: ObjectId("6397ff202cbd434779a4ed18"),
    mail: 'diego@gmail.com',
    mensaje: 'hola'
  },
  {
    _id: ObjectId("6398005a2cbd434779a4ed19"),
    mail: 'agustin@gmail.com',
    mensaje: 'bien'
  }
]
coderhouse> db.productos.insertOne({product: 'peliculaUno', precio: 120, thumbnail:'one.url'})
{
  acknowledged: true,
  insertedId: ObjectId("639805e32cbd434779a4ed1b")
}
coderhouse> db.productos.find()
[
  {
    _id: ObjectId("639805e32cbd434779a4ed1b"),
    product: 'peliculaUno',
    precio: 120,
    thumbnail: 'one.url'
  }
]
coderhouse> ddb.productos.insertOne({product: 'peliculaDos', precio: 580, thumbnail:'two.url'})
ReferenceError: ddb is not defined
coderhouse> db.productos.insertOne({product: 'peliculaDos', precio: 580, thumbnail:'two.url'}
...
...
... )
{
  acknowledged: true,
  insertedId: ObjectId("6398063c2cbd434779a4ed1c")
}
coderhouse> db.productos.find()
[
  {
    _id: ObjectId("639805e32cbd434779a4ed1b"),
    product: 'peliculaUno',
    precio: 120,
    thumbnail: 'one.url'
  },
  {
    _id: ObjectId("6398063c2cbd434779a4ed1c"),
    product: 'peliculaDos',
    precio: 580,
    thumbnail: 'two.url'
  }
]
coderhouse> db.productos.insertOne({ product: 'peliculaTres', precio: 900, thumbnail: 'three.url' })
{
  acknowledged: true,
  insertedId: ObjectId("6398065b2cbd434779a4ed1d")
}
coderhouse> db.productos.insertOne({ product: 'peliculaCuatro', precio: 1280, thumbnail: 'four.url' })
{
  acknowledged: true,
  insertedId: ObjectId("639806722cbd434779a4ed1e")
}
coderhouse> db.productos.insertOne({ product: 'peliculaCinco', precio: 1700, thumbnail: 'five.url' })
{
  acknowledged: true,
  insertedId: ObjectId("639806812cbd434779a4ed1f")
}
coderhouse> db.productos.insertOne({ product: 'peliculaSeis', precio: 2300, thumbnail: 'six.url' })
{
  acknowledged: true,
  insertedId: ObjectId("639806912cbd434779a4ed20")
}
coderhouse> db.productos.insertOne({ product: 'peliculaSiete', precio: 28600, thumbnail: 'seven.url' })
{
  acknowledged: true,
  insertedId: ObjectId("639806ae2cbd434779a4ed21")
}
coderhouse> db.productos.insertOne({ product: 'peliculaOcho', precio: 3350, thumbnail: 'eight.url' })
{
  acknowledged: true,
  insertedId: ObjectId("639806c92cbd434779a4ed22")
}
coderhouse> db.productos.deleteOne({product: 'peliculaSiete'})
{ acknowledged: true, deletedCount: 1 }
coderhouse> db.productos.insertOne({ product: 'peliculaSiete', precio: 2860, thumbnail: 'seven.url' })
{
  acknowledged: true,
  insertedId: ObjectId("639806f62cbd434779a4ed23")
}
coderhouse> db.productos.insertOne({ product: 'peliculaNueve', precio: 4320, thumbnail: 'nine.url' })
{
  acknowledged: true,
  insertedId: ObjectId("6398070e2cbd434779a4ed24")
}
coderhouse> db.productos.insertOne({ product: 'peliculaDiez', precio: 4990, thumbnail: 'ten.url' })
{
  acknowledged: true,
  insertedId: ObjectId("6398071d2cbd434779a4ed25")
}
coderhouse> db.productos.find()
[
  {
    _id: ObjectId("639805e32cbd434779a4ed1b"),
    product: 'peliculaUno',
    precio: 120,
    thumbnail: 'one.url'
  },
  {
    _id: ObjectId("6398063c2cbd434779a4ed1c"),
    product: 'peliculaDos',
    precio: 580,
    thumbnail: 'two.url'
  },
  {
    _id: ObjectId("6398065b2cbd434779a4ed1d"),
    product: 'peliculaTres',
    precio: 900,
    thumbnail: 'three.url'
  },
  {
    _id: ObjectId("639806722cbd434779a4ed1e"),
    product: 'peliculaCuatro',
    precio: 1280,
    thumbnail: 'four.url'
  },
  {
    _id: ObjectId("639806812cbd434779a4ed1f"),
    product: 'peliculaCinco',
    precio: 1700,
    thumbnail: 'five.url'
  },
  {
    _id: ObjectId("639806912cbd434779a4ed20"),
    product: 'peliculaSeis',
    precio: 2300,
    thumbnail: 'six.url'
  },
  {
    _id: ObjectId("639806c92cbd434779a4ed22"),
    product: 'peliculaOcho',
    precio: 3350,
    thumbnail: 'eight.url'
  },
  {
    _id: ObjectId("639806f62cbd434779a4ed23"),
    product: 'peliculaSiete',
    precio: 2860,
    thumbnail: 'seven.url'
  },
  {
    _id: ObjectId("6398070e2cbd434779a4ed24"),
    product: 'peliculaNueve',
    precio: 4320,
    thumbnail: 'nine.url'
  },
  {
    _id: ObjectId("6398071d2cbd434779a4ed25"),
    product: 'peliculaDiez',
    precio: 4990,
    thumbnail: 'ten.url'
  }
]
coderhouse> db.productos.find({precio: {$:gt:1000}})
Uncaught:
SyntaxError: Unexpected token, expected "," (1:32)

> 1 | db.productos.find({precio: {$:gt:1000}})
    |                                 ^
  2 |

coderhouse> db.productos.find({precio: {$gt:1000}})
[
  {
    _id: ObjectId("639806722cbd434779a4ed1e"),
    product: 'peliculaCuatro',
    precio: 1280,
    thumbnail: 'four.url'
  },
  {
    _id: ObjectId("639806812cbd434779a4ed1f"),
    product: 'peliculaCinco',
    precio: 1700,
    thumbnail: 'five.url'
  },
  {
    _id: ObjectId("639806912cbd434779a4ed20"),
    product: 'peliculaSeis',
    precio: 2300,
    thumbnail: 'six.url'
  },
  {
    _id: ObjectId("639806c92cbd434779a4ed22"),
    product: 'peliculaOcho',
    precio: 3350,
    thumbnail: 'eight.url'
  },
  {
    _id: ObjectId("639806f62cbd434779a4ed23"),
    product: 'peliculaSiete',
    precio: 2860,
    thumbnail: 'seven.url'
  },
  {
    _id: ObjectId("6398070e2cbd434779a4ed24"),
    product: 'peliculaNueve',
    precio: 4320,
    thumbnail: 'nine.url'
  },
  {
    _id: ObjectId("6398071d2cbd434779a4ed25"),
    product: 'peliculaDiez',
    precio: 4990,
    thumbnail: 'ten.url'
  }
]
coderhouse> db.productos.find({precio: {$lt:1000}})
[
  {
    _id: ObjectId("639805e32cbd434779a4ed1b"),
    product: 'peliculaUno',
    precio: 120,
    thumbnail: 'one.url'
  },
  {
    _id: ObjectId("6398063c2cbd434779a4ed1c"),
    product: 'peliculaDos',
    precio: 580,
    thumbnail: 'two.url'
  },
  {
    _id: ObjectId("6398065b2cbd434779a4ed1d"),
    product: 'peliculaTres',
    precio: 900,
    thumbnail: 'three.url'
  }
]
coderhouse> db.productos.find({precio: {$gt:3000}})
[
  {
    _id: ObjectId("639806c92cbd434779a4ed22"),
    product: 'peliculaOcho',
    precio: 3350,
    thumbnail: 'eight.url'
  },
  {
    _id: ObjectId("6398070e2cbd434779a4ed24"),
    product: 'peliculaNueve',
    precio: 4320,
    thumbnail: 'nine.url'
  },
  {
    _id: ObjectId("6398071d2cbd434779a4ed25"),
    product: 'peliculaDiez',
    precio: 4990,
    thumbnail: 'ten.url'
  }
]
coderhouse> db.productos.find({precio: {$gt:1000}, {$lt:3000}})
Uncaught:
SyntaxError: Unexpected token (1:39)

> 1 | db.productos.find({precio: {$gt:1000}, {$lt:3000}})
    |                                        ^
  2 |

coderhouse> db.productos.find( {$or: {precio: {$gt:1000}, {$lt:3000}}})
Uncaught:
SyntaxError: Unexpected token (1:46)

> 1 | db.productos.find( {$or: {precio: {$gt:1000}, {$lt:3000}}})
    |                                               ^
  2 |

coderhouse> db.productos.find({precio:{$in: [1000, 3000]}})

coderhouse> db.products.find()

coderhouse> db.productos.find()
[
  {
    _id: ObjectId("639805e32cbd434779a4ed1b"),
    product: 'peliculaUno',
    precio: 120,
    thumbnail: 'one.url'
  },
  {
    _id: ObjectId("6398063c2cbd434779a4ed1c"),
    product: 'peliculaDos',
    precio: 580,
    thumbnail: 'two.url'
  },
  {
    _id: ObjectId("6398065b2cbd434779a4ed1d"),
    product: 'peliculaTres',
    precio: 900,
    thumbnail: 'three.url'
  },
  {
    _id: ObjectId("639806722cbd434779a4ed1e"),
    product: 'peliculaCuatro',
    precio: 1280,
    thumbnail: 'four.url'
  },
  {
    _id: ObjectId("639806812cbd434779a4ed1f"),
    product: 'peliculaCinco',
    precio: 1700,
    thumbnail: 'five.url'
  },
  {
    _id: ObjectId("639806912cbd434779a4ed20"),
    product: 'peliculaSeis',
    precio: 2300,
    thumbnail: 'six.url'
  },
  {
    _id: ObjectId("639806c92cbd434779a4ed22"),
    product: 'peliculaOcho',
    precio: 3350,
    thumbnail: 'eight.url'
  },
  {
    _id: ObjectId("639806f62cbd434779a4ed23"),
    product: 'peliculaSiete',
    precio: 2860,
    thumbnail: 'seven.url'
  },
  {
    _id: ObjectId("6398070e2cbd434779a4ed24"),
    product: 'peliculaNueve',
    precio: 4320,
    thumbnail: 'nine.url'
  },
  {
    _id: ObjectId("6398071d2cbd434779a4ed25"),
    product: 'peliculaDiez',
    precio: 4990,
    thumbnail: 'ten.url'
  }
]
coderhouse> db.productos.find({precio:{$all: [1000, 3000]}})

coderhouse> db.productos.find({$or:[{precio:1000}, {precio:3000}]})

coderhouse> db.productos.find({$nor:[{precio:1000}, {precio:3000}]})
[
  {
    _id: ObjectId("639805e32cbd434779a4ed1b"),
    product: 'peliculaUno',
    precio: 120,
    thumbnail: 'one.url'
  },
  {
    _id: ObjectId("6398063c2cbd434779a4ed1c"),
    product: 'peliculaDos',
    precio: 580,
    thumbnail: 'two.url'
  },
  {
    _id: ObjectId("6398065b2cbd434779a4ed1d"),
    product: 'peliculaTres',
    precio: 900,
    thumbnail: 'three.url'
  },
  {
    _id: ObjectId("639806722cbd434779a4ed1e"),
    product: 'peliculaCuatro',
    precio: 1280,
    thumbnail: 'four.url'
  },
  {
    _id: ObjectId("639806812cbd434779a4ed1f"),
    product: 'peliculaCinco',
    precio: 1700,
    thumbnail: 'five.url'
  },
  {
    _id: ObjectId("639806912cbd434779a4ed20"),
    product: 'peliculaSeis',
    precio: 2300,
    thumbnail: 'six.url'
  },
  {
    _id: ObjectId("639806c92cbd434779a4ed22"),
    product: 'peliculaOcho',
    precio: 3350,
    thumbnail: 'eight.url'
  },
  {
    _id: ObjectId("639806f62cbd434779a4ed23"),
    product: 'peliculaSiete',
    precio: 2860,
    thumbnail: 'seven.url'
  },
  {
    _id: ObjectId("6398070e2cbd434779a4ed24"),
    product: 'peliculaNueve',
    precio: 4320,
    thumbnail: 'nine.url'
  },
  {
    _id: ObjectId("6398071d2cbd434779a4ed25"),
    product: 'peliculaDiez',
    precio: 4990,
    thumbnail: 'ten.url'
  }
]
coderhouse> db.productos.find({$in:[{precio:1000}, {precio:3000}]})
MongoServerError: unknown top level operator: $in. If you have a field name that starts with a '$' symbol, consider using $getField or $setField.
coderhouse> db.productos.find({$or:[{precio:1000}, {precio:3000}]})

coderhouse> db.productos.find({$nor:[{precio:1000}, {precio:3000}]})
[
  {
    _id: ObjectId("639805e32cbd434779a4ed1b"),
    product: 'peliculaUno',
    precio: 120,
    thumbnail: 'one.url'
  },
  {
    _id: ObjectId("6398063c2cbd434779a4ed1c"),
    product: 'peliculaDos',
    precio: 580,
    thumbnail: 'two.url'
  },
  {
    _id: ObjectId("6398065b2cbd434779a4ed1d"),
    product: 'peliculaTres',
    precio: 900,
    thumbnail: 'three.url'
  },
  {
    _id: ObjectId("639806722cbd434779a4ed1e"),
    product: 'peliculaCuatro',
    precio: 1280,
    thumbnail: 'four.url'
  },
  {
    _id: ObjectId("639806812cbd434779a4ed1f"),
    product: 'peliculaCinco',
    precio: 1700,
    thumbnail: 'five.url'
  },
  {
    _id: ObjectId("639806912cbd434779a4ed20"),
    product: 'peliculaSeis',
    precio: 2300,
    thumbnail: 'six.url'
  },
  {
    _id: ObjectId("639806c92cbd434779a4ed22"),
    product: 'peliculaOcho',
    precio: 3350,
    thumbnail: 'eight.url'
  },
  {
    _id: ObjectId("639806f62cbd434779a4ed23"),
    product: 'peliculaSiete',
    precio: 2860,
    thumbnail: 'seven.url'
  },
  {
    _id: ObjectId("6398070e2cbd434779a4ed24"),
    product: 'peliculaNueve',
    precio: 4320,
    thumbnail: 'nine.url'
  },
  {
    _id: ObjectId("6398071d2cbd434779a4ed25"),
    product: 'peliculaDiez',
    precio: 4990,
    thumbnail: 'ten.url'
  }
]
coderhouse> db.productos.find({$all:[{precio:1000}, {precio:3000}]})
MongoServerError: unknown top level operator: $all. If you have a field name that starts with a '$' symbol, consider using $getField or $setField.
coderhouse> db.productos.find({$and:[{precio:1000}, {precio:3000}]})

coderhouse> db.productos.find({$in:[{precio:1000}, {precio:3000}]})
MongoServerError: unknown top level operator: $in. If you have a field name that starts with a '$' symbol, consider using $getField or $setField.
coderhouse> db.productos.sort({precio: -1})
TypeError: db.productos.sort is not a function
coderhouse> db.productos.find().sort({precio: -1})
[
  {
    _id: ObjectId("6398071d2cbd434779a4ed25"),
    product: 'peliculaDiez',
    precio: 4990,
    thumbnail: 'ten.url'
  },
  {
    _id: ObjectId("6398070e2cbd434779a4ed24"),
    product: 'peliculaNueve',
    precio: 4320,
    thumbnail: 'nine.url'
  },
  {
    _id: ObjectId("639806c92cbd434779a4ed22"),
    product: 'peliculaOcho',
    precio: 3350,
    thumbnail: 'eight.url'
  },
  {
    _id: ObjectId("639806f62cbd434779a4ed23"),
    product: 'peliculaSiete',
    precio: 2860,
    thumbnail: 'seven.url'
  },
  {
    _id: ObjectId("639806912cbd434779a4ed20"),
    product: 'peliculaSeis',
    precio: 2300,
    thumbnail: 'six.url'
  },
  {
    _id: ObjectId("639806812cbd434779a4ed1f"),
    product: 'peliculaCinco',
    precio: 1700,
    thumbnail: 'five.url'
  },
  {
    _id: ObjectId("639806722cbd434779a4ed1e"),
    product: 'peliculaCuatro',
    precio: 1280,
    thumbnail: 'four.url'
  },
  {
    _id: ObjectId("6398065b2cbd434779a4ed1d"),
    product: 'peliculaTres',
    precio: 900,
    thumbnail: 'three.url'
  },
  {
    _id: ObjectId("6398063c2cbd434779a4ed1c"),
    product: 'peliculaDos',
    precio: 580,
    thumbnail: 'two.url'
  },
  {
    _id: ObjectId("639805e32cbd434779a4ed1b"),
    product: 'peliculaUno',
    precio: 120,
    thumbnail: 'one.url'
  }
]
coderhouse> db.productos.find().sort({precio: 3})
MongoInvalidArgumentError: Invalid sort direction: 3
coderhouse> db.productos.find().sort({precio: -2})
MongoInvalidArgumentError: Invalid sort direction: -2
coderhouse> db.productos.find().sort({precio: 1})
[
  {
    _id: ObjectId("639805e32cbd434779a4ed1b"),
    product: 'peliculaUno',
    precio: 120,
    thumbnail: 'one.url'
  },
  {
    _id: ObjectId("6398063c2cbd434779a4ed1c"),
    product: 'peliculaDos',
    precio: 580,
    thumbnail: 'two.url'
  },
  {
    _id: ObjectId("6398065b2cbd434779a4ed1d"),
    product: 'peliculaTres',
    precio: 900,
    thumbnail: 'three.url'
  },
  {
    _id: ObjectId("639806722cbd434779a4ed1e"),
    product: 'peliculaCuatro',
    precio: 1280,
    thumbnail: 'four.url'
  },
  {
    _id: ObjectId("639806812cbd434779a4ed1f"),
    product: 'peliculaCinco',
    precio: 1700,
    thumbnail: 'five.url'
  },
  {
    _id: ObjectId("639806912cbd434779a4ed20"),
    product: 'peliculaSeis',
    precio: 2300,
    thumbnail: 'six.url'
  },
  {
    _id: ObjectId("639806f62cbd434779a4ed23"),
    product: 'peliculaSiete',
    precio: 2860,
    thumbnail: 'seven.url'
  },
  {
    _id: ObjectId("639806c92cbd434779a4ed22"),
    product: 'peliculaOcho',
    precio: 3350,
    thumbnail: 'eight.url'
  },
  {
    _id: ObjectId("6398070e2cbd434779a4ed24"),
    product: 'peliculaNueve',
    precio: 4320,
    thumbnail: 'nine.url'
  },
  {
    _id: ObjectId("6398071d2cbd434779a4ed25"),
    product: 'peliculaDiez',
    precio: 4990,
    thumbnail: 'ten.url'
  }
]
coderhouse> db.productos.find().sort({precio: 1})
[
  {
    _id: ObjectId("639805e32cbd434779a4ed1b"),
    product: 'peliculaUno',
    precio: 120,
    thumbnail: 'one.url'
  },
  {
    _id: ObjectId("6398063c2cbd434779a4ed1c"),
    product: 'peliculaDos',
    precio: 580,
    thumbnail: 'two.url'
  },
  {
    _id: ObjectId("6398065b2cbd434779a4ed1d"),
    product: 'peliculaTres',
    precio: 900,
    thumbnail: 'three.url'
  },
  {
    _id: ObjectId("639806722cbd434779a4ed1e"),
    product: 'peliculaCuatro',
    precio: 1280,
    thumbnail: 'four.url'
  },
  {
    _id: ObjectId("639806812cbd434779a4ed1f"),
    product: 'peliculaCinco',
    precio: 1700,
    thumbnail: 'five.url'
  },
  {
    _id: ObjectId("639806912cbd434779a4ed20"),
    product: 'peliculaSeis',
    precio: 2300,
    thumbnail: 'six.url'
  },
  {
    _id: ObjectId("639806f62cbd434779a4ed23"),
    product: 'peliculaSiete',
    precio: 2860,
    thumbnail: 'seven.url'
  },
  {
    _id: ObjectId("639806c92cbd434779a4ed22"),
    product: 'peliculaOcho',
    precio: 3350,
    thumbnail: 'eight.url'
  },
  {
    _id: ObjectId("6398070e2cbd434779a4ed24"),
    product: 'peliculaNueve',
    precio: 4320,
    thumbnail: 'nine.url'
  },
  {
    _id: ObjectId("6398071d2cbd434779a4ed25"),
    product: 'peliculaDiez',
    precio: 4990,
    thumbnail: 'ten.url'
  }
]
coderhouse> db.productos.find().sort({precio: 1}).limit(3)
[
  {
    _id: ObjectId("639805e32cbd434779a4ed1b"),
    product: 'peliculaUno',
    precio: 120,
    thumbnail: 'one.url'
  },
  {
    _id: ObjectId("6398063c2cbd434779a4ed1c"),
    product: 'peliculaDos',
    precio: 580,
    thumbnail: 'two.url'
  },
  {
    _id: ObjectId("6398065b2cbd434779a4ed1d"),
    product: 'peliculaTres',
    precio: 900,
    thumbnail: 'three.url'
  }
]
coderhouse> db.productos.find().sort({precio: 1}).limit(1).skip(2)
[
  {
    _id: ObjectId("6398065b2cbd434779a4ed1d"),
    product: 'peliculaTres',
    precio: 900,
    thumbnail: 'three.url'
  }
]
coderhouse> db.productos.updateMany({}, {$set: {stock:100}})
{
  acknowledged: true,
  insertedId: null,
  matchedCount: 10,
  modifiedCount: 10,
  upsertedCount: 0
}
coderhouse> db.productos.find()
[
  {
    _id: ObjectId("639805e32cbd434779a4ed1b"),
    product: 'peliculaUno',
    precio: 120,
    thumbnail: 'one.url',
    stock: 100
  },
  {
    _id: ObjectId("6398063c2cbd434779a4ed1c"),
    product: 'peliculaDos',
    precio: 580,
    thumbnail: 'two.url',
    stock: 100
  },
  {
    _id: ObjectId("6398065b2cbd434779a4ed1d"),
    product: 'peliculaTres',
    precio: 900,
    thumbnail: 'three.url',
    stock: 100
  },
  {
    _id: ObjectId("639806722cbd434779a4ed1e"),
    product: 'peliculaCuatro',
    precio: 1280,
    thumbnail: 'four.url',
    stock: 100
  },
  {
    _id: ObjectId("639806812cbd434779a4ed1f"),
    product: 'peliculaCinco',
    precio: 1700,
    thumbnail: 'five.url',
    stock: 100
  },
  {
    _id: ObjectId("639806912cbd434779a4ed20"),
    product: 'peliculaSeis',
    precio: 2300,
    thumbnail: 'six.url',
    stock: 100
  },
  {
    _id: ObjectId("639806c92cbd434779a4ed22"),
    product: 'peliculaOcho',
    precio: 3350,
    thumbnail: 'eight.url',
    stock: 100
  },
  {
    _id: ObjectId("639806f62cbd434779a4ed23"),
    product: 'peliculaSiete',
    precio: 2860,
    thumbnail: 'seven.url',
    stock: 100
  },
  {
    _id: ObjectId("6398070e2cbd434779a4ed24"),
    product: 'peliculaNueve',
    precio: 4320,
    thumbnail: 'nine.url',
    stock: 100
  },
  {
    _id: ObjectId("6398071d2cbd434779a4ed25"),
    product: 'peliculaDiez',
    precio: 4990,
    thumbnail: 'ten.url',
    stock: 100
  }
]
coderhouse> db.productos.find().sort({precio: 1})